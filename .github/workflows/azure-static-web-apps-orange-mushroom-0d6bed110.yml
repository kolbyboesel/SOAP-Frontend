name: Soap Frontend Deployment Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master
jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ensure Node.js version 18 (or the version you need)
          
      - name: Install dependencies
        run: npm install
        env:
          NODE_OPTIONS: --openssl-legacy-provider  # Set NODE_OPTIONS for this step

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
        
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
           
      - name: Build and Deploy
        id: builddeploy
        run: |
          # Ensure NODE_OPTIONS is set for the build step to bypass OpenSSL issue
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build  # Run the build command to generate production build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_MUSHROOM_0D6BED110 }}
          github_id_token: ${{ steps.idtoken.outputs.result }}

        # Azure Static Web Apps deploy action
      - name: Azure Static Web Apps Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_MUSHROOM_0D6BED110 }}
          action: "upload"
          app_location: "/"  # App source code path
          api_location: ""  # API source code path - optional
          output_location: "build"  # Built app content directory
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"